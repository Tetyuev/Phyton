# 1. Создать программный файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
# Об окончании ввода данных будет свидетельствовать пустая строка.
# with open("TexFile.txt", 'w') as tf:
#    l = input('Введите строку')
#    while l!='':
#       tf.write(l+'\n')
#       l = input('Введите следующую строку:')

# 2. Создать текстовый файл (не программно), сохранить в нём несколько строк, выполнить подсчёт строк и слов в каждой строке.

# poem = open('Task_5_2.txt', "r", encoding="utf-8")
# l = 0
# for line in poem:
#    l+=1 #нумерация строк
#    a = line.split() #разделили на слова по пробелам, но тире тоже отделено пробелами, поэтому
#    s=0               #считаем тире в каждой строке
#    for el in a:
#       if el== "-":
#          s+=1
#    print(f'В строке {l} напечатано {len(a)-s} слов.')
# print(f'Всего строк {l}.')
# poem.close()
# 3. Создать текстовый файл (не программно).
# Построчно записать фамилии сотрудников и величину их окладов (не менее 10 строк).
# Определить, кто из сотрудников имеет оклад менее 20 тысяч, вывести фамилии этих сотрудников.
# Выполнить подсчёт средней величины дохода сотрудников.
# empl= open('task_5_3.txt', 'r', encoding='utf-8')
# empl_dict = {}
# for line in empl:
#    a=line.split()
#    a[1]=float(a[1])
#    d=dict([a])
#    empl_dict.update(d)
# s=''
# for k, v in empl_dict.items():
#    if v < 20000:
#       s=s+k+'\n'
# print(f'Сотрудники с зарплатой менее 20 тысяч:\n\n{s}')
# avr = sum(empl_dict.values())/len(empl_dict)
# print(f'Средний доход сотрудников: {avr:.2f}')

# 4. Создать (не программно) текстовый файл со следующим содержимым:
# One — 1
# Two — 2
# Three — 3
# Four — 4
# Напишите программу, открывающую файл на чтение и считывающую построчно данные.
# При этом английские числительные должны заменяться на русские.
# Новый блок строк должен записываться в новый текстовый файл.

# Tr = {'One':'Один', 'Two': 'Два', 'Three': 'Три', 'Four': 'Четыре'}
# New = []
# with open('Task_5_4.txt', 'r', encoding='utf-8') as t:
#     for line in t:
#         w = line.split()
#         print(w)
#         if w[0] in Tr:
#             num = Tr[w[0]]
#             New.append(num+ ' - '+w[2]+'\n')
# print(New)
# with open('Task_5_4n.txt', 'w') as new_block:
#     new_block.writelines(New)

# 5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделённых пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить её на экран.

# e = input("Введите числа через пробел: ")
# f = open('Task_5_5.txt', 'w')
# f.write(e)
# f.close()
# f = open('Task_5_5.txt')
# a = f.read().split()
# s = 0
# for i in a:
#     b=int(i)
#     s+=b
# print(s)

# 6. Сформировать (не программно) текстовый файл.
# В нём каждая строка должна описывать учебный предмет и наличие лекционных,
# практических и лабораторных занятий по предмету.
# Сюда должно входить и количество занятий.
# Необязательно, чтобы для каждого предмета были все типы занятий.
# Сформировать словарь, содержащий название предмета и общее количество занятий по нему.
# Вывести его на экран.
# Примеры строк файла:
# Информатика: 100(л) 50(пр) 20(лаб).
# Физика: 30(л) — 10(лаб)
# Физкультура: — 30(пр) —
# Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}
# import re
# Gen={}
# with open('Task_5_6.txt', "r", encoding='utf-8') as plan:
#     for line in plan:
#         subj = line.split(':')
#         a=sum(int(s) for s in re.findall(r'-?[\d+]\.?\d*', line))
#         Gen[subj[0]]=a
# print(Gen)

# 7. Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая строка будет содержать данные о фирме:
# название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
# # Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
# Если фирма получила убытки, в расчёт средней прибыли её не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
# Если фирма получила убытки, также добавить её в словарь (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
# # Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
# Подсказка: использовать менеджер контекста.

a=open('Task_5_7.txt', 'w')
b=True
while True:
    name=input('Введите название фирмы:\n')
    aff=input('Введите форму собтственности:\n')
    inc=float(input('Введите выручку:\n'))
    cost=float(input('Введите издержки:\n'))
    firm=str(name+' '+aff + ' '+ str(inc) + ' '+ str(cost))
    a.writelines(firm+'\n')
    qu=input('Q - Закончить  ввод \nЛюбая другая клавиша - продолжить')
    if qu == "Q" or qu =='q':
        break
    else:
        continue
a.close()
with open("")
for line in lines(a):


















